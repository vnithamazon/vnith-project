CREATE TABLE Customers (
    CUSTOMER_ID SERIAL PRIMARY KEY,
    NAME TEXT NOT NULL,
    EMAIL TEXT UNIQUE,
    PHONE TEXT,
    ADDRESS TEXT
);

CREATE TABLE Products (
    PRODUCT_ID SERIAL PRIMARY KEY,
    PRODUCT_NAME TEXT NOT NULL,
    CATEGORY TEXT,
    PRICE NUMERIC(10,2),
    STOCK INTEGER
);

CREATE TABLE Orders (
    ORDER_ID SERIAL PRIMARY KEY,
    CUSTOMER_ID INTEGER REFERENCES Customers(CUSTOMER_ID),
    PRODUCT_ID INTEGER REFERENCES Products(PRODUCT_ID),
    QUANTITY INTEGER,
    ORDER_DATE DATE
);

INSERT INTO Customers (NAME, EMAIL, PHONE, ADDRESS) VALUES
('John Doe', 'john@example.com', '1234567890', '123 Main St'),
('Jane Smith', 'jane@example.com', '2345678901', '456 Elm St'),
('Bob Johnson', 'bob@example.com', '3456789012', '789 Oak Ave'),
('Alice Brown', 'alice@example.com', '4567890123', '321 Pine Rd'),
('Charlie Davis', 'charlie@example.com', '5678901234', '654 Maple Dr');

INSERT INTO Products (PRODUCT_NAME, CATEGORY, PRICE, STOCK) VALUES
('Laptop', 'Electronics', 999.99, 50),
('Smartphone', 'Electronics', 599.99, 100),
('T-shirt', 'Clothing', 19.99, 200),
('Jeans', 'Clothing', 49.99, 150),
('Book', 'Books', 14.99, 300),
('Headphones', 'Electronics', 79.99, 75),
('Sneakers', 'Footwear', 89.99, 100);

INSERT INTO Orders (CUSTOMER_ID, PRODUCT_ID, QUANTITY, ORDER_DATE) VALUES
(1, 1, 1, '2023-01-15'),
(2, 3, 2, '2023-02-01'),
(3, 2, 1, '2023-03-10'),
(4, 5, 3, '2023-04-05'),
(5, 4, 1, '2023-05-20'),
(1, 6, 1, '2023-06-15'),
(2, 7, 1, '2023-07-01'),
(3, 1, 1, '2023-08-10'),
(4, 3, 2, '2023-09-05'),
(5, 2, 1, '2023-10-20');

SELECT o.ORDER_ID, p.PRODUCT_NAME, o.QUANTITY, o.ORDER_DATE
FROM Orders o
JOIN Products p ON o.PRODUCT_ID = p.PRODUCT_ID
WHERE o.CUSTOMER_ID = 1;

SELECT PRODUCT_NAME, STOCK
FROM Products
WHERE STOCK = 0;

SELECT p.PRODUCT_NAME, SUM(p.PRICE * o.QUANTITY) AS TOTAL_REVENUE
FROM Products p
JOIN Orders o ON p.PRODUCT_ID = o.PRODUCT_ID
GROUP BY p.PRODUCT_ID, p.PRODUCT_NAME
ORDER BY TOTAL_REVENUE DESC;

SELECT c.NAME, SUM(p.PRICE * o.QUANTITY) AS TOTAL_PURCHASE
FROM Customers c
JOIN Orders o ON c.CUSTOMER_ID = o.CUSTOMER_ID
JOIN Products p ON o.PRODUCT_ID = p.PRODUCT_ID
GROUP BY c.CUSTOMER_ID, c.NAME
ORDER BY TOTAL_PURCHASE DESC
LIMIT 5;

SELECT c.NAME, COUNT(DISTINCT p.CATEGORY) AS CATEGORY_COUNT
FROM Customers c
JOIN Orders o ON c.CUSTOMER_ID = o.CUSTOMER_ID
JOIN Products p ON o.PRODUCT_ID = p.PRODUCT_ID
GROUP BY c.CUSTOMER_ID, c.NAME
HAVING COUNT(DISTINCT p.CATEGORY) >= 2;

SELECT TO_CHAR(o.ORDER_DATE, 'YYYY-MM') AS MONTH, 
       SUM(p.PRICE * o.QUANTITY) AS TOTAL_SALES
FROM Orders o
JOIN Products p ON o.PRODUCT_ID = p.PRODUCT_ID
GROUP BY TO_CHAR(o.ORDER_DATE, 'YYYY-MM')
ORDER BY TOTAL_SALES DESC
LIMIT 1;

SELECT p.PRODUCT_NAME
FROM Products p
LEFT JOIN Orders o ON p.PRODUCT_ID = o.PRODUCT_ID
AND o.ORDER_DATE >= CURRENT_DATE - INTERVAL '6 months'
WHERE o.ORDER_ID IS NULL;

SELECT c.NAME
FROM Customers c
LEFT JOIN Orders o ON c.CUSTOMER_ID = o.CUSTOMER_ID
WHERE o.ORDER_ID IS NULL;

SELECT AVG(ORDER_VALUE) AS AVERAGE_ORDER_VALUE
FROM (
    SELECT o.ORDER_ID, SUM(p.PRICE * o.QUANTITY) AS ORDER_VALUE
    FROM Orders o
    JOIN Products p ON o.PRODUCT_ID = p.PRODUCT_ID
    GROUP BY o.ORDER_ID
) AS ORDER_VALUES;
